@model NavOS.Basecode.Services.ServiceModels.FilteredBooksViewModel
@using NavOS.Basecode.Services.Helper;
@{
    ViewData["Title"] = "Top books";

    var requestQuery = ViewContext.HttpContext.Request.Query;

    int pageSize = 10;
    var (currentPage, totalItems, totalPages, startIndex, bookNumber, pageData) = PaginationHelper
        .GetPagination(pageSize, Model.Books, requestQuery["page"]
        .FirstOrDefault());

    var (displayText, textColor, fontStyle) = HeaderHelper.GetDisplayProperties(Context);
}

<style>
    .ellipsis {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
    }

    .ellipsis-genre {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
    }

    .pagination .page-item.active a {
        background-color: #00A651;
        box-shadow: none;
    }

    .pagination .page-item:not(.active) a {
        background-color: transparent;
        color: #000;
    }

    .pagination .page-item a {
        border: none;
    }

    .pagination .page-item a:hover {
        background-color: #00A651;
        color: white;
    }

    .rating-badge {
        position: absolute;
        top: -12px;
        right: -12px;
        z-index: 1;
        width: 40px;
        height: 40px;
        background-color: #FFC119;
        color: #f000;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .rating-badge .badge {
        display: inline-block;
        padding: 8px 15px;
        border-radius: 50%;
    }

    .scrollable-dropdown {
        max-height: 200px;
        overflow-y: auto;
    }

</style>


<div class="container mt-5">
    <div class="row" style="border: 1px solid #fff;">
        <!-- Header Container -->
        <div class="col-md-12" style="background-color:#FFC119">
            <div class="d-flex justify-content-between align-items-center">
                <span class="float-start text-center fst-italic my-2 text-dark fw-bold" style="color: @(textColor); font-style: @(fontStyle);">
                   TOP | @displayText
                </span>
                <!-- Pagination -->
                <nav aria-label="Page navigation" style="margin-bottom:-14.5px;">
                    <ul class="pagination">
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@FilterHelper.GetQueryString(currentPage - 1, Context)" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        }

                        @for (int i = Math.Max(1, currentPage - 1); i <= Math.Min(totalPages, currentPage + 1); i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="@FilterHelper.GetQueryString(i, Context)">@i</a>
                            </li>
                        }

                        @if (currentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@FilterHelper.GetQueryString(currentPage + 1, Context)" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
@*         <!-- Filter button section -->
        <div class="col-12 mt-4">
            @foreach (var filterOption in new[] { "ratings", "title", "author" })
            {
                var isActive = string.Equals(requestQuery["filter"].ToString(), filterOption, StringComparison.OrdinalIgnoreCase);
                var buttonText = filterOption.First().ToString().ToUpper() + filterOption.Substring(1);

                <a href="?filter=@filterOption&sort=@filterOption" class="btn btn-outline-warning @(isActive ? "active text-dark" : "text-white")" style="box-shadow:none; text-decoration: none; color: inherit; margin-left:5px;">
                    @buttonText
                </a>
            }
            <button type="button" style="box-shadow:none; text-decoration: none; color: inherit;" class="btn btn-outline-warning text-white" data-toggle="collapse" data-target="#genreFilter">Genre</button>
        </div>
        <!-- Genre list section -->
        <div id="genreFilter" class="@(string.IsNullOrEmpty(requestQuery["searchQuery"]) ? "collapse" : "")">
            <div class="row ms-1">
                <div class="col-md-12 mt-3">
                    <h4 class="text-white font-weight-light mt-2">Genre</h4>
                    @for (var i = 0; i < Model.Genres.Count; i++)
                    {
                        var genre = Model.Genres[i];
                        var selectedGenres = requestQuery["searchQuery"];
                        var currentGenre = genre.GenreName;
                        var isSelected = selectedGenres.ToString() == currentGenre ? "active text-dark" : "text-white";

                        <button type="button" class="shadow-none btn btn-outline-warning @(isSelected)" style="min-width: 100px" onclick="location.href='?filter=genre&searchQuery=@(isSelected == "active text-dark" ? "" : currentGenre)'">@currentGenre</button>
                    }
                </div>
            </div>
        </div> *@
        <!-- Book List -->
        <div class="col-md-12 mt-3">
            <ul class="row mt-3 list-unstyled" style="padding-left: 0;">
                @if (pageData.Any())
                {
                    @foreach (var books in pageData)
                    {
                        <li class="col-10 col-md-3 col-xl-2 mb-3 mx-3">
                            <div class="card w-100" style="height: 100%;">
                                <a asp-action="BookDetails" asp-controller="Book" asp-route-BookId="@books.BookId" class="text-decoration-none text-dark">
                                    <div class="rating-badge">
                                        <span class="badge badge-primary rounded-circle text-dark">
                                            @books.TotalRating
                                            <i class="fa fa-star checked"></i>
                                        </span>
                                    </div>
                                    <img class="card-img-top" height="250" width="100" src="@books.ImageUrl" alt="Card image cap" onerror="this.src='@Url.Content("~/img/default-book.jpg")'" style="border: 1px solid #fff;">
                                    <div class="card-body text-center d-flex justify-content-center" style="height:110px;background-color:#212529; margin-top:-15px; border: 1px solid #fff; margin-bottom:-20px;">
                                        <h6 class="card-title ellipsis text-white">@books.BookTitle</h6>
                                    </div>
                                    <div class="card-footer text-start d-flex justify-content-start" style="height:40px; background-color:#212529; border: 1px solid #fff; border-top: none;">
                                        <span class="card-title ellipsis text-white" style="margin-top:-5px; font-size:12px;">
                                            <i class="fas fa-book"></i>
                                            @books.ReviewCount Reviews
                                        </span>
                                    </div>
                                </a>
                            </div>
                        </li>
                    }
                }
                else
                {
                    <span class="text-white ms-3">No Books found</span>
                }
            </ul>
        </div>
    </div>
</div>
