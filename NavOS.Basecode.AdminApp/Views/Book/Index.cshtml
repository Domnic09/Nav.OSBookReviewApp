@using NavOS.Basecode.Services.ServiceModels;
@{
    ViewData["Title"] = "Home Page";
    var model = ViewData["Books"] as List<NavOS.Basecode.Services.ServiceModels.BookViewModel>;
    var reviews = ViewData["Reviews"] as List<NavOS.Basecode.Services.ServiceModels.ReviewViewModel>;

    //sort the books according to reviews
    var reviewsCountByBookId = reviews
    .GroupBy(r => r.BookId)
    .ToDictionary(g => g.Key, g => g.Count());

    var sortedBooks = model.OrderByDescending(book => reviewsCountByBookId.ContainsKey(book.BookId) ? reviewsCountByBookId[book.BookId] : 0);

    //filter new books according to addedtime for the past 2 weeks
    var filteredBooks = model
    .OrderByDescending(book => book.AddedTime)
    .Where(book => (DateTime.Now - book.AddedTime).TotalDays <= 14)
    .Take(5);

    // Calculate the avg. rate & count no. of reviews for each book
    var bookAverages = sortedBooks.Select(book => new
    {
        BookId = book.BookId,
        AverageRate = reviews
            .Where(r => r.BookId == book.BookId)
            .Select(r => (double?)r.Rate)
            .Average() ?? 0.0,
        ReviewCount = reviews
            .Count(r => r.BookId == book.BookId)
    });
}
<style>
    .ellipsis {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
    }

    .rating-badge {
        position: absolute;
        top: -12px;
        right: -12px;
        z-index: 1;
        width: 40px;
        height: 40px;
        background-color: #FFC119;
        color: #f000;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .rating-badge .badge {
            display: inline-block;
            padding: 8px 15px;
            border-radius: 50%;
        }

</style>
<div class="row mt-4 mx-1">
    <!-- Latest Books-->
    <div class="col-9 col-md-11 ms-5 px-2">
        <a asp-action="NewBooks" asp-controller="Book" class="btn btn-warning text-dark float-end mt-2" style="box-shadow:none;">View New Books</a>
    </div>
    <div class="col-md-3 d-flex justify-content-between">
        <span class="h4" style="color:#FFC119; margin-top:-28px;">LATEST BOOKS</span>
    </div>
</div>
<!-- Loading animation container -->
<div id="loading" class="loading-container">
    <div class="loading-spinner"></div>
</div>
<div class="col-md-12">
    <div class="row">
        <!-- Book List -->
        <div class="col-md-12 mx-2">
            <ul class="row mt-3 list-unstyled mx-auto" style="padding-left: 0;">
                @foreach (var book in filteredBooks)
                {
                    <li class="col-10 col-md-3 col-xl-2 mb-3 mx-3">
                        <div class="card w-100" style="height: 100%;">
                            <a asp-action="BookDetails" asp-controller="Book" asp-route-BookId="@book.BookId" class="text-decoration-none text-dark">
                                <div class="rating-badge">
                                    <span class="badge badge-primary rounded-circle text-dark">
                                        @(
                                            (bookAverages.FirstOrDefault(b => b.BookId == book.BookId)?.AverageRate ?? 0.0) % 1 == 0
                                            ? (bookAverages.FirstOrDefault(b => b.BookId == book.BookId)?.AverageRate ?? 0.0).ToString("0")
                                            : (bookAverages.FirstOrDefault(b => b.BookId == book.BookId)?.AverageRate ?? 0.0).ToString("0.0")
                                            )
                                        <i class="fa fa-star checked"></i>
                                    </span>
                                </div>
                                <img class="card-img-top" height="250" width="100" src="@book.ImageUrl" alt="Card image cap" onerror="this.src='@Url.Content("~/img/default-book.jpg")'" style="border: 1px solid #fff; object-fit: cover">
                                <div class="card-body text-center d-flex justify-content-center" style="height:90px;background-color:#212529; margin-top:-15px; border: 1px solid #fff; margin-bottom:-20px;">
                                    <h6 class="card-title ellipsis text-white">@book.BookTitle</h6>
                                </div>
                                <div class="card-footer text-center d-flex justify-content-start" style="height:40px; background-color:#212529; border: 1px solid #fff; border-top: none;">
                                    <span class="card-title ellipsis text-white" style="margin-top:-5px;font-size:12px;">
                                        <i class="far fa-calendar"></i>
                                        @(book.AddedTime.ToString("MMMM d, yyyy"))
                                    </span>
                                </div>
                            </a>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
    <div class="row mt-5 mx-1">
        <!--View Top Books-->
        <div class="col-md-12 d-flex justify-content-between">
            <span class="h4" style="color:#FFC119; margin-top:-28px;">TOP BOOKS</span>
        </div>
    </div>
    <div class="row">
        <!-- Book List -->
        <div class="col-md-12 mx-2">
            <ul class="row mt-3 list-unstyled mx-auto" style="padding-left: 0;">
                @foreach (var book in sortedBooks.Take(5))
                {
                    <li class="col-10 col-md-3 col-xl-2 mb-3 mx-3">
                        <div class="card w-100" style="height: 100%;">
                            <a asp-action="BookDetails" asp-controller="Book" asp-route-BookId="@book.BookId" class="text-decoration-none text-dark">
                                <div class="rating-badge">
                                    <span class="badge badge-primary rounded-circle text-dark">
                                        @(
                                            (bookAverages.FirstOrDefault(b => b.BookId == book.BookId)?.AverageRate ?? 0.0) % 1 == 0
                                            ? (bookAverages.FirstOrDefault(b => b.BookId == book.BookId)?.AverageRate ?? 0.0).ToString("0")
                                            : (bookAverages.FirstOrDefault(b => b.BookId == book.BookId)?.AverageRate ?? 0.0).ToString("0.0")
                                            )
                                        <i class="fa fa-star checked"></i>
                                    </span>
                                </div>
                                <img class="card-img-top" height="250" width="100" src="@book.ImageUrl" alt="Card image cap" onerror="this.src='@Url.Content("~/img/default-book.jpg")'" style="border: 1px solid #fff; object-fit: cover">
                                <div class="card-body text-center d-flex justify-content-center" style="height:90px;background-color:#212529; margin-top:-15px; border: 1px solid #fff; margin-bottom:-20px;">
                                    <h6 class="card-title ellipsis text-white">@book.BookTitle</h6>
                                </div>
                                <div class="card-footer text-center d-flex justify-content-start" style="height:40px; background-color:#212529; border: 1px solid #fff; border-top: none;">
                                    <span class="card-title ellipsis text-white" style="margin-top:-5px; font-size:12px;">
                                        @(reviewsCountByBookId.ContainsKey(book.BookId) ? reviewsCountByBookId[book.BookId] : 0)
                                        <i class="fas fa-book"></i>
                                    </span>
                                </div>
                            </a>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

@section scripts {
    <script>
        // Check for error message and display Toastr notification
        var errorMessage = '@TempData["ErrorMessage"]';
        var successMessage = '@TempData["SuccessMessage"]';

        if (errorMessage) {
            toastr.error(errorMessage);
        }

        if (successMessage) {
            toastr.success(successMessage);
        }

    </script>
}